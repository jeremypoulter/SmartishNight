name: Fabrication

on:
  push:
    branches:
      - main
    tags:
      - v*
    paths:
      - '**.sch'
      - '**.kicad_pcb'
      - '.github/workflows/*'
      - 'jlcpcb/*'
  pull_request:
    paths:
      - '**.sch'
      - '**.kicad_pcb'
      - '.github/workflows/*'
      - 'jlcpcb/*'

env:
  KIKIT: docker run --rm -v $PWD:/pcb -w /pcb --user $UID:$GROUPS yaqwsx/kikit kikit

jobs:
  docs:
    name: Documentation generation
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        include:
          - name: SmartishLight_ESP32
            schematic: NightLight_ESP32.sch
            board: NightLight_ESP32.kicad_pcb
          - name: SmartishLight_ESP32_tall
            schematic: NightLight_ESP32.sch
            board: NightLight_ESP32_tall.kicad_pcb

    steps:
    - uses: actions/checkout@v2

    - uses: nerdyscout/kicad-exports@v2.2
      with:
        config: docs.kibot.yaml
        dir: docs
        schema: ${{ matrix.schematic }}
        board: ${{ matrix.board }}

    - name: upload results
      uses: actions/upload-artifact@v2
      with:
        name: ${{ matrix.name }}-docs
        path: docs

  fabrications:
    name: Fabrication
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        include:
          - name: SmartishLight_ESP32
            schematic: NightLight_ESP32.sch
            board: NightLight_ESP32.kicad_pcb
          - name: SmartishLight_ESP32_tall
            schematic: NightLight_ESP32.sch
            board: NightLight_ESP32_tall.kicad_pcb

    steps:
    - uses: actions/checkout@v2

    - name: Export JLCPCB fabrication files
      run: |
        ${{ env.KIKIT }} fab jlcpcb --assembly --schematic ${{ matrix.schematic }} --ignore J2,JP1 ${{ matrix.board }} ${{ matrix.name }}

    - name: upload results
      uses: actions/upload-artifact@v2
      with:
        name: ${{ matrix.name }}
        path: |
          ${{ matrix.name }}/*.zip
          ${{ matrix.name }}/*.csv

  release:
    name: Release
    runs-on: ubuntu-latest
    needs: 
      - docs
      - fabrications

    if: startsWith(github.ref, 'refs/tags/v')

    steps:
    - name: Download the built assets
      uses: actions/download-artifact@v2
      with:
        path: artifacts

    - name: Package up the combined assets
      run: |
        find artifacts
        version=${GITHUB_REF_NAME}
        for i in SmartishLight_ESP32 SmartishLight_ESP32_tall
        do
          for l in gerbers.zip bom.csv pos.csv
          do
            mv artifacts/$i/$l artifacts/$i-$l-$version.zip
          done
          rm -rf artifacts/$i
        done
        mv artifacts/SmartishLight_ESP32-docs/docs/NightLight_ESP32-schematic.pdf artifacts/SmartishLight_ESP32-schematic-$version.pdf
        for i in SmartishLight_ESP32-docs SmartishLight_ESP32_tall-docs
        do
          rm -rf artifacts/$i
        done
        find artifacts

    - name: Upload assets to latest release
      uses: "marvinpinto/action-automatic-releases@latest"
      with:
        repo_token: "${{ secrets.GITHUB_TOKEN }}"
        automatic_release_tag: "latest"
        prerelease: true
        title: "Development Build"
        files: |
          artifacts/**/*.zip
          artifacts/**/*.csv
          artifacts/**/*.pdf

